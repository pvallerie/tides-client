{"version":3,"sources":["logo.svg","components/AuthenticatedRoute.js","components/Navigation.js","apiConfig.js","api/auth.js","components/SignUp.js","api/tides.js","components/SignIn.js","components/SignOut.js","components/ChangeLocation.js","components/Home.js","components/SetTides.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","authenticatedNav","Nav","Link","href","unauthenticatedNav","Navigation","Navbar","Brand","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","method","url","data","email","password","SignUp","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","setUser","history","state","password_confirmation","passwordConfirmation","then","res","token","userData","headers","push","catch","error","console","message","this","className","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","variant","withRouter","SignIn","onSignIn","SignOut","msgAlert","clearUser","finally","ChangeLocation","changeLocation","useState","newLocation","setNewLocation","reset","persist","prevState","updatedField","Object","assign","Home","setLocation","highTide","setHighTide","lowTide","setLowTide","useEffect","log","userLocation","locations","find","element","owner","id","openCageUrl","get","firstResult","results","geometry","lat","lng","coordinates","worldTidesUrl","promise","high","low","tides","extremes","utcSeconds","dt","Date","date","formatedLocation","updateLocation","newTides","nextTides","makeApiCalls","setTides","App","msgAlerts","path","appJsx","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.74416d69.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n  // if props include a `user` object but no `render` then create route with `Component`\n  // if props do not include a `user` object then redirect to home\n  } else {\n    return <Route {...rest} render={props =>\n      user ? <Component {...props} /> : <Redirect to='/' />\n    } />\n  }\n}\n\nexport default AuthenticatedRoute","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\nconst authenticatedNav = (\n    <Fragment>\n        <Nav.Link href='#/sign-out'>Sign Out</Nav.Link>\n    </Fragment>\n)\n\nconst unauthenticatedNav = (\n    <Fragment>\n        <Nav.Link href=\"#/sign-up\">Sign Up</Nav.Link>\n        <Nav.Link href=\"#/sign-in\">Sign In</Nav.Link>\n    </Fragment>\n)\n\nconst Navigation = ({ user }) => {\n    return (\n        <Navbar>\n            <Navbar.Brand>\n                Tides\n            </Navbar.Brand>\n            <Nav>\n                { user ? authenticatedNav : unauthenticatedNav }\n            </Nav>\n        </Navbar>\n    )\n}\n\nexport default Navigation","let apiUrl\nconst apiUrls = {\n  production: 'https://tides-api.herokuapp.com',\n  development: 'http://localhost:8000/api'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = credentials => {\n    return axios({\n        method: 'POST',\n        url: apiUrl + '/sign-up/',\n        data: {\n            credentials: {\n                email: credentials.email,\n                password: credentials.password,\n                password_confirmation: credentials.passwordConfirmation\n            }\n        }\n    })\n}\n\nexport const signIn = credentials => {\n    return axios({\n        method: 'POST',\n        url: apiUrl + '/sign-in/',\n        data: {\n            credentials: {\n                email: credentials.email,\n                password: credentials.password\n            }\n        }\n    })\n}\n\nexport const signOut = userData => {\n    return axios({\n      url: apiUrl + '/sign-out/',\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Token ${userData.token}`\n      }\n    })\n  }","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../api/auth'\nimport { createLocation } from '../api/tides'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: '',\n            passwordConfirmation: '',\n            location: ''\n        }\n    }\n\n    handleChange = event => this.setState({\n        [event.target.name]: event.target.value\n    })\n\n    handleSubmit = event => {\n        event.preventDefault()\n        const { setUser, history } = this.props\n        // const { email, password, passwordConfirmation, location } = this.state\n\n        signUp(this.state)\n            .then(() => signIn(this.state))\n            .then(res => {\n              setUser(res.data.user)\n              this.state.token = res.data.user.token\n            })\n            .then(() => createLocation(this.state))\n            .then(() => history.push('/home'))\n            .catch(error => console.error('ERROR: ', error.message))\n    }\n\n    render () {\n        const { email, password, passwordConfirmation, location } = this.state\n\n        return (\n            <div className=\"row\">\n              <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n                <h3>Sign Up</h3>\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Group controlId=\"email\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"email\"\n                      name=\"email\"\n                      value={email}\n                      placeholder=\"Enter email\"\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                      required\n                      name=\"password\"\n                      type=\"password\"\n                      value={password}\n                      placeholder=\"Password\"\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"passwordConfirmation\">\n                    <Form.Label>Password Confirmation</Form.Label>\n                    <Form.Control\n                      required\n                      name=\"passwordConfirmation\"\n                      type=\"password\"\n                      value={passwordConfirmation}\n                      placeholder=\"Confirm Password\"\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"location\">\n                    <Form.Label>Location</Form.Label>\n                    <Form.Control\n                      required\n                      name=\"location\"\n                      type=\"text\"\n                      value={location}\n                      placeholder=\"Enter your location\"\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Form>\n              </div>\n            </div>\n          )\n    }\n}\n\nexport default withRouter(SignUp)","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// Create Location\nexport  const createLocation = (userData) => {\n    return axios({\n        url: apiUrl + '/locations',\n        method: 'POST',\n        headers: {\n            'Authorization': `Token ${userData.token}`\n        },\n        data: {\n            location: {\n                name: userData.location\n            }\n        }\n    })\n}\n\n// Get Location\nexport const indexLocations = (userData) => {\n    return axios({\n        url: apiUrl + '/locations',\n        method: 'GET',\n        headers: {\n            'Authorization': `Token ${userData.token}`\n        }\n    })\n}\n\n// Update Location\nexport const updateLocation = (id, location, userData) => {\n    return axios({\n        url: apiUrl + '/locations/' + id + '/',\n        method: 'PATCH',\n        headers: {\n            'Authorization': `Token ${userData.token}`\n        },\n        data: { location }\n    })\n}\n\n// // Get Coordinates\n// export const getCoordinates = (openCageUrl) => {\n//     return axios({\n//         url: openCageUrl,\n//         method: 'GET'\n//     })\n// }\n\n\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    handleChange = event => this.setState({\n        [event.target.name]: event.target.value\n    })\n\n    onSignIn = event => {\n        event.preventDefault()\n\n        const { setUser, history } = this.props\n\n        signIn(this.state)\n            .then(res => setUser(res.data.user))\n            .then(() => history.push('/home'))\n            .catch(error => console.error('ERROR: ', error.message))\n    }\n\n    render () {\n        const { email, password } = this.state\n        return (\n            <div className=\"row\">\n              <div className=\"col-sm-10 col-md-8 mx-auto mt-5\">\n                <h3>Sign In</h3>\n                <Form onSubmit={this.onSignIn}>\n                  <Form.Group controlId=\"email\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"email\"\n                      name=\"email\"\n                      value={email}\n                      placeholder=\"Enter email\"\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                      required\n                      name=\"password\"\n                      value={password}\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Form>\n              </div>\n            </div>\n          )\n    }\n}\n\nexport default withRouter(SignIn)","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../api/auth'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() => history.push('/sign-in'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)","import React, { useState } from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport changeLocation from '../api/tides'\n\nconst ChangeLocation = props => {\n    const { changeLocation, location } = props\n    const [newLocation, setNewLocation] = useState({})\n\n    const handleChange = event => {\n        event.persist()\n\n        setNewLocation(prevState => {\n            const updatedField = { [event.target.name]: event.target.value }\n            const editNewLocation = Object.assign({}, prevState, updatedField)\n            return editNewLocation\n        })\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        // clear form\n        event.target.reset()\n        changeLocation(newLocation.name)\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"newLocation\">\n                <Form.Label>Change Location</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter new location\" name=\"name\" onChange={handleChange} />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n                Submit\n            </Button>\n        </Form>\n    )\n}\n\nexport default ChangeLocation","import React, { useState, useEffect, Fragment } from 'react'\nimport { indexLocations, updateLocation } from '../api/tides'\nimport axios from 'axios'\n\nimport ChangeLocation from './ChangeLocation'\nimport { setTides } from './SetTides'\n\nconst Home = props => {\n    const { user } = props\n    const [location, setLocation] = useState({ name: '' })\n    const [highTide, setHighTide] = useState(null)\n    const [lowTide, setLowTide] = useState(null)\n\n    // when page loads\n    useEffect(() => {\n        // get user's location\n        indexLocations(user)\n            .then(res => {\n                // extract locations from response\n                console.log(res)\n                const locations = res.data.locations\n                // extract location that user created from locations array\n                const userLocation = locations.find(element => element.owner.id === user.id)\n                setLocation(userLocation)\n                return userLocation\n            })\n            // get location lat/long\n            .then(userLocation => {\n                const openCageUrl = `https://api.opencagedata.com/geocode/v1/json?q=${userLocation.name}&key=4c4a96fe14474c8097b3f465760faede&countrycode=us`\n                axios.get(openCageUrl)\n                    .then(res => {\n                        // pull first result\n                        const firstResult = res.data.results[0]\n                        // extract lat and lng\n                        const lat = firstResult.geometry.lat\n                        const lng = firstResult.geometry.lng\n                        return [lat, lng]\n                    })\n                    // get tides\n                    .then(coordinates => {\n                        const lat = coordinates[0]\n                        const lng = coordinates[1]\n                        const worldTidesUrl = `https://www.worldtides.info/api/v2?extremes&date=today&lat=${lat},&lon=${lng}&key=b3b2c2e6-070f-4d4c-927e-ae381d5beef6&timezone&localtime`\n                        const promise = axios.get(worldTidesUrl)\n                        return promise\n                    })\n                    // extract next high and low\n                    .then(promise => {\n                        let high = null\n                        let low = null\n                        const tides = promise.data.extremes\n                        // get current date/time (in seconds since unix epox)\n                        const utcSeconds = tides[0].dt\n                        const date = new Date(utcSeconds)\n                        // set first tide in tides\n                        if (tides[0].type === \"High\") {\n                            high = tides[0].date\n                        } else {\n                            low = tides[0].date\n                        }\n                        // set second tide in tides\n                        if (tides[1].type === \"High\") {\n                            high = tides[1].date\n                        } else {\n                            low = tides[1].date\n                        }\n                        return [high, low]\n                    })\n                    // set tides states\n                    .then(tides => {\n                        setHighTide(tides[0])\n                        setLowTide(tides[1])\n                    })\n            })\n    }, [])\n\n    const changeLocation = (newLocation) => {\n        // format location\n        const formatedLocation = location\n        // add updated name to it\n        formatedLocation.name = newLocation\n        // update location state\n        setLocation(formatedLocation)\n        // call api to update location\n        updateLocation(formatedLocation.id, formatedLocation, user)\n        // get tides and reset page\n        const newTides = setTides(location)\n        setHighTide(newTides[0])\n        setLowTide(newTides[1])\n    }\n    \n    return (\n        <Fragment>\n            <p>Location: {location.name}</p>\n            <p>Next High: {highTide}</p>\n            <p>Next Low: {lowTide}</p>\n            <ChangeLocation changeLocation={changeLocation} location={location} user={user} />\n        </Fragment>\n    )\n}\n\nexport default Home","import axios from 'axios'\n\n// function to get tides\nexport const setTides = (userLocation) => {\n    // array to return with next high and low tides\n    let nextTides = []\n\n    const makeApiCalls = () => {\n        // get location lat/long\n        const openCageUrl = `https://api.opencagedata.com/geocode/v1/json?q=${userLocation.name}&key=4c4a96fe14474c8097b3f465760faede&countrycode=us`\n        axios.get(openCageUrl)\n            .then(res => {\n                // pull first result\n                const firstResult = res.data.results[0]\n                // extract lat and lng\n                const lat = firstResult.geometry.lat\n                const lng = firstResult.geometry.lng\n                return [lat, lng]\n            })\n            // get tides\n            .then(coordinates => {\n                const lat = coordinates[0]\n                const lng = coordinates[1]\n                const worldTidesUrl = `https://www.worldtides.info/api/v2?extremes&date=today&lat=${lat},&lon=${lng}&key=b3b2c2e6-070f-4d4c-927e-ae381d5beef6&timezone&localtime`\n                const promise = axios.get(worldTidesUrl)\n                return promise\n            })\n            // extract next high and low\n            .then(promise => {\n                let high = null\n                let low = null\n                const tides = promise.data.extremes\n                // // get current date/time (in seconds since unix epox)\n                // const utcSeconds = tides[0].dt\n                // const date = new Date(utcSeconds)\n                // set first tide in tides\n                if (tides[0].type === \"High\") {\n                    high = tides[0].date\n                } else {\n                    low = tides[0].date\n                }\n                // set second tide in tides\n                if (tides[1].type === \"High\") {\n                    high = tides[1].date\n                } else {\n                    low = tides[1].date\n                }\n                return nextTides = [high, low]\n            })\n    }\n\n    makeApiCalls()\n    \n    console.log('nextTides: ', nextTides)\n    return nextTides\n}","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component, Fragment } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute'\nimport Navigation from './components/Navigation'\n\nimport SignUp from './components/SignUp'\nimport SignIn from './components/SignIn'\nimport SignOut from './components/SignOut'\n\nimport Home from './components/Home'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  // Updates user state\n  setUser = user => this.setState({ user })\n\n  // Clears user state\n  clearUser = () => this.setState({ user: null })\n\n  render () {\n    const { user } = this.state\n\n    return (\n      <Fragment>\n        <Navigation user={user} />\n        <main className=\"container\">\n          <Route path='/sign-up' render={() => (\n            <SignUp setUser={this.setUser}/>\n          )} />\n          <Route path='/sign-in' render={() => (\n            <SignIn setUser={this.setUser}/>\n          )} />\n          <AuthenticatedRoute user={user} path='/sign-out' render={() =>\n          <p>Authenticated Route works!</p>} />\n          <AuthenticatedRoute user={user} path='/home' render={() =>\n            <Home user={user} />} />\n          <AuthenticatedRoute user={user} path='/sign-out' render={() => (\n            <SignOut clearUser={this.clearUser} user={user} />\n          )} />\n        </main>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport './index.css';\nimport App from './App';\n\nconst appJsx = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}